useDynLib(rbamtools, .registration = TRUE, .fixes = "C_")
# Used from graphics:
# arrows layout lcm legend lines mtext par plot polygon rect text
import(methods,graphics)
importFrom("utils", "head", "tail", "write.table")
importFrom("grDevices", "dev.off", "pdf", "terrain.colors")
importFrom("stats", "loess", "predict")
importClassesFrom(refGenome)
S3method(as.data.frame, bamGapList)
S3method(as.data.frame, bamRange)
S3method(as.data.frame, gapList)
S3method(as.data.frame, gapSiteList)
S3method(as.data.frame, rangeSegCount)
S3method(as.data.frame, refSeqDict)
S3method(merge, bamGapList)
S3method(merge, gapSiteList)
S3method(summary, bamGapList)
S3method(plot, geneAlignDepth)
S3method(plot, exonAlignDepth)
S3method(plot, exonLoessModel)
export(
	as.data.frame.bamRange,
	as.data.frame.gapList,
	as.data.frame.gapSiteList,
	as.data.frame.bamGapList,
	as.data.frame.rangeSegCount,
	as.data.frame.refSeqDict,
	bamAlign,
	bamHeaderText,
	bamReader,
	bamRange,
	countTextLines,
	createIdxBatch,
	extractBamRegions,
	merge.gapSiteList,
	merge.bamGapList,
	multSeq,
	readPooledBamGaps,
	readPooledBamGapDf,
	segmentize,
	summary.bamGapList
)
exportMethods(
	addSeq,
	addReadGroup,
	aldRatio,
	alignDepth,
	alignQual,
	alignQualVal,
	alignSeq,
	as.list,
	bamClose,
	bamCopy,
	bamCount,
	bamCountAll,
	bamFiles,
	"bamFiles<-",
	bamHeader,
	"bamIdxFiles<-",
	bamIdxFiles,
	sampleBamFiles,
	bamSave,
	bamGapList,
	bamSort,
	bamWriter,
	checkBamFiles,
	checkPartition,
	cigarData,
	countNucs,
	countPartition,
	createIndex,
	cutFlatAlignDepth,
	dim,
	exonLoessModel,
	extractGeneRegions,
	extractRanges,
	failedQC,
	"failedQC<-",
	filename,
	firstInPair,
	"firstInPair<-",
	flag,
	"flag<-",
	gapList,
	genomePartition,
	getAlignCounts,
	getAlignRange,
	getCoords,
	getDepth,
	getFileTable,
	getGridAlignCounts,
	getHeader,
	getHeaderText,
	getNextAlign,
	getNormFactor,
	getQualDf,
	getQualQuantiles,
	getParams,
	getPos,
	getPrevAlign,
	getRefCoords,
	getRefCount,
	getRefData,
	getRefId,
	getRefName,
	getSeqLen,
	getSeqNr,
	getVal,
	groupAldTable,
	groupAldMatrix,
	exonAlignDepth,
	groupTable,
	"groupTable<-",
	groupRatio,
	head,
	headerLine,
	"headerLine<-",
	headerProgram,
	"headerProgram<-",
	headerReadGroup,
	"headerReadGroup<-",
	indexInitialized,
	insertPastCurrent,
	insertPreCurrent,
	insertSize,
	isOpen,
	junctionSites,
	loadIndex,
	mapQuality,
	matePosition,
	mateRefID,
	mateReverseStrand,
	"mateReverseStrand<-",
	mateUnmapped,
	"mateUnmapped<-",
	moveCurrentAlign,
	name,
	"nAligns<-",
	nAligns,
	nCigar,
	nAlignGaps,
	nucStats,
	paired,
	"paired<-",
	pcrORopt_duplicate,
	"pcrORopt_duplicate<-",
	plotAlignDepth,
	plotQualQuant,
	pop_back,
	pop_front,
	position,
	properPair,
	"properPair<-",
	push_back,
	push_front,
	rangeToFastq,
	rangeSegCount,
	readerToFastq,
	readRange,
	refID,
	"refID<-",
	refSeqDict,
	"refSeqDict<-",
	removeSeqs,
	reverseStrand,
	"reverseStrand<-",
	rewind,
	geneAlignDepth,
	saveAldData,
	"sampleGroups<-",
	sampleGroups,
	"sampleLabels<-",
	sampleLabels,
	secondaryAlign,
	"secondaryAlign<-",
	secondInPair,
	"secondInPair<-",
	setVal,
	siteList,
	size,
	stepNextAlign,
	stepPrevAlign,
	suppAlign,
	"suppAlign<-",
	tail,
	unmapped,
	"unmapped<-",
	writeCurrentAlign
)
exportClasses(
	alignDepth,
	bamAlign,
	bamHeader,
	bamHeaderText,
	bamRange,
	bamReader,
	sampleBamFiles,
	bamWriter,
	bamGapList,
	gapList,
	gapSiteList,
	exonAlignDepth,
	exonLoessModel,
	GenomePartition,
	headerLine,
	headerProgram,
	headerReadGroup,
	rangeSegCount,
	refSeqDict,
	geneAlignDepth
)

